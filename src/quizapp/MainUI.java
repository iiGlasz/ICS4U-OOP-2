package quizapp;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import javax.swing.SwingUtilities;


/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author nengj
 */
public class MainUI extends javax.swing.JFrame {

    private Question currentQuestion;
    private User currentUser;
    private final ArrayList<Question> easyQuestions = new ArrayList<>();
    private final ArrayList<Question> mediumQuestions = new ArrayList<>();
    private final ArrayList<Question> hardQuestions = new ArrayList<>();
    private final Leaderboard leaderboardObj = new Leaderboard("leaderboard.txt");

    public MainUI() {
        initComponents();
        loadQuestionsFromFile();
        showNextQuestion();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        buttonA = new javax.swing.JButton();
        buttonC = new javax.swing.JButton();
        buttonD = new javax.swing.JButton();
        buttonB = new javax.swing.JButton();
        ansB = new javax.swing.JLabel();
        ansD = new javax.swing.JLabel();
        ansC = new javax.swing.JLabel();
        skip = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        ansA1 = new javax.swing.JLabel();
        username = new javax.swing.JTextField();
        difficulty = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        question = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        leaderboard = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        feedback = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel3.setText("Feedback:");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel4.setText("Username:");

        buttonA.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        buttonA.setText("a)");
        buttonA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAActionPerformed(evt);
            }
        });

        buttonC.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        buttonC.setText("c)");
        buttonC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCActionPerformed(evt);
            }
        });

        buttonD.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        buttonD.setText("d)");
        buttonD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonDActionPerformed(evt);
            }
        });

        buttonB.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        buttonB.setText("b)");
        buttonB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonBActionPerformed(evt);
            }
        });

        ansB.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        ansB.setText("Answer B");

        ansD.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        ansD.setText("Answer D");

        ansC.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        ansC.setText("Answer C");

        skip.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        skip.setText("Next");
        skip.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                skipActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel5.setText("Leaderboard");

        ansA1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        ansA1.setText("Answer A");

        username.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        username.setText("Enter User");
        username.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usernameActionPerformed(evt);
            }
        });

        difficulty.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        difficulty.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Easy", "Medium", "Hard" }));
        difficulty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                difficultyActionPerformed(evt);
            }
        });

        question.setColumns(20);
        question.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        question.setLineWrap(true);
        question.setRows(5);
        question.setText("Question:");
        jScrollPane1.setViewportView(question);

        leaderboard.setColumns(20);
        leaderboard.setLineWrap(true);
        leaderboard.setRows(5);
        jScrollPane2.setViewportView(leaderboard);

        feedback.setColumns(20);
        feedback.setLineWrap(true);
        feedback.setRows(5);
        jScrollPane3.setViewportView(feedback);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(70, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(buttonA)
                                    .addGap(18, 18, 18)
                                    .addComponent(ansA1, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 535, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(difficulty, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(username, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGap(85, 85, 85))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(355, 355, 355)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 463, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(66, 66, 66)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(buttonB)
                                .addGap(18, 18, 18)
                                .addComponent(ansB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(buttonC)
                                    .addComponent(buttonD))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(ansC, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(ansD, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(142, 142, 142)
                                .addComponent(skip, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(169, 169, 169))))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(80, 80, 80)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 463, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(549, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(difficulty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(username, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(buttonA)
                            .addComponent(ansA1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonB)
                    .addComponent(ansB, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(buttonC)
                        .addGap(18, 18, 18)
                        .addComponent(buttonD))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(ansC, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(ansD, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(109, 109, 109)
                .addComponent(skip)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 65, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(606, Short.MAX_VALUE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(43, 43, 43)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAActionPerformed
        handleAnswer("a");
    }//GEN-LAST:event_buttonAActionPerformed

    private void buttonCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCActionPerformed
        handleAnswer("c");
    }//GEN-LAST:event_buttonCActionPerformed

    private void buttonDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonDActionPerformed
        handleAnswer("d");
    }//GEN-LAST:event_buttonDActionPerformed

    private void buttonBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonBActionPerformed
        handleAnswer("b");
    }//GEN-LAST:event_buttonBActionPerformed

    private void skipActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_skipActionPerformed
        feedback.setText("Question skipped.");
        showNextQuestion();
    }//GEN-LAST:event_skipActionPerformed

    private void usernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usernameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_usernameActionPerformed

    private void difficultyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_difficultyActionPerformed
        showNextQuestion();
    }//GEN-LAST:event_difficultyActionPerformed

    
    
      private void loadQuestionsFromFile() {
        try (BufferedReader reader = new BufferedReader(new InputStreamReader(
                getClass().getResourceAsStream("/quizapp/questions.txt")))) {

            String line;
            while ((line = reader.readLine()) != null) {
                String[] parts = line.split("\\|");
                if (parts.length != 5) continue;

                String level = parts[0];
                String qText = parts[1];
                String[] answers = parts[2].split(";");
                String correct = parts[3];
                String feedbackText = parts[4];

                Question q = new MultipleChoice(qText, answers, correct.toLowerCase(), feedbackText);

                switch (level) {
                    case "Easy" -> easyQuestions.add(q);
                    case "Medium" -> mediumQuestions.add(q);
                    case "Hard" -> hardQuestions.add(q);
                }
            }
        } catch (Exception e) {
            question.setText("Could not load questions.");
            e.printStackTrace();
        }
    }

    private void handleAnswer(String choice) {
        if (currentQuestion == null) return;

        String name = username.getText().trim();
        if (name.isEmpty()) name = "___";

        if (currentUser == null) {
            currentUser = new User(0, name);
        }

        String selectedDifficulty = (String) difficulty.getSelectedItem();
        Difficulty diff = switch (selectedDifficulty) {
            case "Easy" -> new Difficulty("Easy", 1.0);
            case "Medium" -> new Difficulty("Medium", 1.5);
            case "Hard" -> new Difficulty("Hard", 2.0);
            default -> new Difficulty("Easy", 1.0);
        };

        boolean correct = currentQuestion.isCorrect(choice);
        if (correct) {
            int score = (int) currentQuestion.calculateScore(choice, diff);
            currentUser.incrementScore(score);
            leaderboardObj.addUser(currentUser);
        }

        feedback.setText("Feedback: " + currentQuestion.getFeedback());
        leaderboard.setText(leaderboardObj.getFormattedTopUsers());
        leaderboard.setCaretPosition(0);

        showNextQuestion();
    }




    private void showNextQuestion() {
        String level = (String) difficulty.getSelectedItem();

        if (level.equals("Easy") && !easyQuestions.isEmpty()) {
            currentQuestion = easyQuestions.remove(0);
        } else if (level.equals("Medium") && !mediumQuestions.isEmpty()) {
            currentQuestion = mediumQuestions.remove(0);
        } else if (level.equals("Hard") && !hardQuestions.isEmpty()) {
            currentQuestion = hardQuestions.remove(0);
        } else {
            question.setText("No more questions in this category.");
            ansA1.setText(""); ansB.setText(""); ansC.setText(""); ansD.setText("");
            return;
        }

        question.setText("Question: " + currentQuestion.getQuestionText());
        String[] answers = currentQuestion.getAnswers();
        ansA1.setText("a) " + answers[0]);
        ansB.setText("b) " + answers[1]);
        ansC.setText("c) " + answers[2]);
        ansD.setText("d) " + answers[3]);
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(() -> new MainUI().setVisible(true));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ansA1;
    private javax.swing.JLabel ansB;
    private javax.swing.JLabel ansC;
    private javax.swing.JLabel ansD;
    private javax.swing.JButton buttonA;
    private javax.swing.JButton buttonB;
    private javax.swing.JButton buttonC;
    private javax.swing.JButton buttonD;
    private javax.swing.JComboBox<String> difficulty;
    private javax.swing.JTextArea feedback;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea leaderboard;
    private javax.swing.JTextArea question;
    private javax.swing.JButton skip;
    private javax.swing.JTextField username;
    // End of variables declaration//GEN-END:variables
}
